ARG FROM_IMAGE=ubuntu:18.04

FROM $FROM_IMAGE

ARG ARG_GOSU_VERSION

ARG ARG_RUST_TOOLCHAIN

ARG ARG_RUST_CROSS_TARGETS

ARG CARGO_HOME=/opt/rust/cargo

ENV GOSU_VERSION=${ARG_GOSU_VERSION:-1.12} \
    RUST_TOOLCHAIN=${ARG_RUST_TOOLCHAIN:-stable} \
    RUST_CROSS_TARGETS=${ARG_RUST_CROSS_TARGETS:-x86_64-pc-windows-gnu,x86_64-apple-darwin} \
    RUSTUP_HOME=/opt/rust/rustup \
    PATH="${PATH}:/opt/rust/cargo/bin"

MAINTAINER infrastructure@zensystem.io

SHELL ["/bin/bash", "-c"]

RUN set -euxo pipefail \
    && apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends apt-utils \
      build-essential ca-certificates curl dirmngr gcc-mingw-w64-x86-64 gnupg2 pigz wget \
      libssl-dev pkg-config \
    && if ! command -v gosu &> /dev/null; then \
      dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')" \
      && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch" \
      && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc" \
      && export GNUPGHOME="$(mktemp -d)" \
      && ( gpg2 --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 || \
        gpg2 --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 || \
        gpg2 --batch --keyserver hkp://ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 || \
        gpg2 --batch --keyserver pgp.mit.edu --recv-key B42F6819007F00F88E364FD4036A9C25BF357DD4 || \
        gpg2 --batch --keyserver keyserver.pgp.com --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 || \
        gpg2 --batch --keyserver pgp.key-server.io --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ) \
      && gpg2 --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \
      && ( gpgconf --kill dirmngr || true ) \
      && ( gpgconf --kill gpg-agent || true ) \
      && rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc \
      && unset GNUPGHOME \
      && chmod +x /usr/local/bin/gosu \
      && gosu nobody true; \
    fi \
    && curl https://sh.rustup.rs -sSf | bash -s -- -y --default-toolchain none --profile default --no-modify-path \
    && rustup default $RUST_TOOLCHAIN \
    && for target in $(tr "," "\n" <<< "$RUST_CROSS_TARGETS"); do \
      rustup target add --toolchain $RUST_TOOLCHAIN $target; \
    done \
    && mkdir -p /{root,etc/skel}/.cargo \
    && { \
      echo '[target.x86_64-pc-windows-gnu]'; \
      echo 'linker = "x86_64-w64-mingw32-gcc"'; \
      echo 'ar = "x86_64-w64-mingw32-gcc-ar"'; \
    } | tee -a /{root,etc/skel}/.cargo/config > /dev/null \
    && cargo install cargo-audit
    && apt-get -y clean \
    && apt-get -y autoclean \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*.deb /tmp/* \
    && echo 'PATH="'"$PATH"'"' > /etc/environment
